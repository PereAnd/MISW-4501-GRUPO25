# Change the following to your desired values:
#   __ACCOUNT_NUMBER__
#   __ECR_REGION__
#   __ECR_REPOSITORY_NAME__
#   __ECS_CONTAINER_NAME__

version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 798178280816.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=798178280816.dkr.ecr.us-east-1.amazonaws.com/candidato
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPOSITORY_URI_CB=798178280816.dkr.ecr.us-east-1.amazonaws.com/candidato_cb
      - COMMIT_HASH_CB=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG_CB=${COMMIT_HASH_CB:=latest}
      - REPOSITORY_URI_EMP=798178280816.dkr.ecr.us-east-1.amazonaws.com/empresa
      - COMMIT_HASH_EMP=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG_EMP=${COMMIT_HASH:=latest}
      - REPOSITORY_URI_EMP_CB=798178280816.dkr.ecr.us-east-1.amazonaws.com/empresa_cb
      - COMMIT_HASH_EMP_CB=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG_EMP_CB=${COMMIT_HASH_CB:=latest}
      - sed -i 's@CANDIDATO_IMAGE@'"$REPOSITORY_URI:$IMAGE_TAG"'@' backend/deployment/k8s/deployment.yaml
      - sed -i 's@CANDIDATO_CB_IMAGE@'"$REPOSITORY_URI_CB:$IMAGE_TAG_CB"'@' backend/deployment/k8s/deployment.yaml
      - sed -i 's@EMPRESA_IMAGE@'"$REPOSITORY_URI_EMP:$IMAGE_TAG_EMP"'@' backend/deployment/k8s/deployment.yaml
      - sed -i 's@EMPRESA_CB_IMAGE@'"$REPOSITORY_URI_EMP_CB:$IMAGE_TAG_EMP_CB"'@' backend/deployment/k8s/deployment.yaml
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image candidato...          
      - docker build -t $REPOSITORY_URI:latest ./backend/candidato/src
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker build -t $REPOSITORY_URI_CB:latest ./backend/candidato_sb/src
      - docker tag $REPOSITORY_URI_CB:latest $REPOSITORY_URI_CB:$IMAGE_TAG_CB
      - docker build -t $REPOSITORY_URI_EMP:latest ./backend/empresa/src
      - docker tag $REPOSITORY_URI_EMP:latest $REPOSITORY_URI_EMP:$IMAGE_TAG_EMP
      - docker build -t $REPOSITORY_URI_EMP_CB:latest ./backend/empresa_sb/src
      - docker tag $REPOSITORY_URI_EMP_CB:latest $REPOSITORY_URI_EMP_CB:$IMAGE_TAG_EMP_CB
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI_CB:latest
      - docker push $REPOSITORY_URI_CB:$IMAGE_TAG_CB
      - docker push $REPOSITORY_URI_EMP:latest
      - docker push $REPOSITORY_URI_EMP:$IMAGE_TAG_EMP
      - docker push $REPOSITORY_URI_EMP_CB:latest
      - docker push $REPOSITORY_URI_EMP_CB:$IMAGE_TAG_EMP_CB
      - echo Writing image definitions file...
      - printf '[{"name”:"candidato","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - printf '[{"name”:"candidato_cb","imageUri":"%s"}]' $REPOSITORY_URI_CB:$IMAGE_TAG_CB > imagedefinitions_cb.json
      - printf '[{"name”:"empresa","imageUri":"%s"}]' $REPOSITORY_URI_EMP:$IMAGE_TAG_EMP > imagedefinitions_emp.json
      - printf '[{"name”:"empresa_cb","imageUri":"%s"}]' $REPOSITORY_URI_EMP_CB:$IMAGE_TAG_EMP_CB > imagedefinitions_emp_cb.json
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::798178280816:role/CodeBuildEKSRole --role-session-name eks-codebuild --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      # Updating kubectl with your EKS Cluster              
      - echo "Update Kube Config configuration"      
      - aws eks update-kubeconfig --name backend-proyecto9
      # Show time, applying manifests changes using kubectl
      - echo "Apply changes to kube manifests"            
      - kubectl apply -f backend/deployment/k8s/deployment.yaml
      - echo "All done!!!! Kubernetes changes applied"           
      # Create Artifacts which we can use if we want to continue our pipeline for other stages
      - printf '[{"name":"deployment.yaml","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > build.json            

artifacts:
  files: 
    - imagedefinitions.json
    - imagedefinitions_cb.json
    - imagedefinitions_emp.json
    - imagedefinitions_emp_cb.json
    - backend/deployment/k8s/deployment.yaml
